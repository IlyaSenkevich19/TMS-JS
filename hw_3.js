// ### NORMAL level

// #### Task 1 üíª
const Q = "true",
  W = false,
  E = 17,
  R = undefined,
  T = null;
console.log(typeof Q, typeof W, typeof E, typeof R, typeof T);

// #### Task 2 üíª

const HEIGHT = 15,
  WIDTH = 20;
console.log(Math.max(HEIGHT, WIDTH));

// #### Task 3 üíª

for (let i = 1; i <= 20; i++) {
  if (i % 3 == 0) {
    console.log(i);
  } else {
    continue;
  }
}

// #### Task 4 üíª

let key = true;
let documents = true;
let pen = true;
let apple = false;
let orange = true;

let shouldGoToWork = key && documents && pen && (apple || orange);
console.log(shouldGoToWork);

// #### Task 5 üíª

let inputNumber = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ :");
if (inputNumber % 5 == 0 && inputNumber % 3 == 0) {
  alert("FizBuz");
} else if (inputNumber % 3 == 0) {
  alert("Buz");
} else if (inputNumber % 5 == 0) {
  alert("Fiz");
} else {
  alert("–ù–µ, –≤–≤–µ–¥–∏ –∫—Ä–∞—Ç–Ω–æ–µ –ø—è—Ç–∏ –∏–ª–∏ —Ç—Ä–µ–º");
}

// #### Task 6 üíª

let inputAge = prompt("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç");
if (inputAge >= 16 && inputAge <= 18) {
  alert("–ú–æ–∂–µ—à—å –≤—ã–∫—É—Ä–∏—Ç—å —Å–∏–≥–∞—Ä–µ—Ç–∫—É, —Ç–æ–ª—å–∫–æ –º–∞–º–µ –Ω–µ –≥–æ–≤–æ—Ä–∏");
} else if (inputAge < 18 && inputAge > 0) {
  alert(`–ü–µ–π –∫–æ–ª—É`);
} else if (inputAge > 18) {
  alert(`–ü–æ–ø–µ–π –ø–∏–≤–∫–∞`);
} else {
  alert(`–ù–µ –ø–æ–Ω—è–ª, –≤–≤–µ–¥–∏ –∑–∞–Ω–æ–≤–æ`);
}

// #### Task 7 üíª

const InputSide = prompt(" –í –∫–∞–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É —Å–≤–µ—Ç–∞ –≤—ã  —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è");

switch (InputSide) {
  case `—é–≥`:
    console.log("–Ω–∞ —é–≥ –ø–æ–π–¥–µ—à—å —Å—á–∞—Å—Ç—å–µ –Ω–∞–π–¥–µ—à—å");
    break;
  case `—Å–µ–≤–µ—Ä`:
    console.log("–Ω–∞ —Å–µ–≤–µ—Ä –ø–æ–π–¥–µ—à—å –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞–π–¥–µ—à—å");
    break;
  case `–∑–∞–ø–∞–¥`:
    console.log("–Ω–∞ –∑–∞–ø–∞–¥ –ø–æ–π–¥–µ—à—å –≤–µ—Ä–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –Ω–∞–π–¥–µ—à—å");
    break;
  case `–≤–æ—Å—Ç–æ–∫`:
    console.log("–Ω–∞ –≤–æ—Å—Ç–æ–∫ –ø–æ–π–¥–µ—à—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —Å—Ç–∞–Ω–µ—à—å");
  default:
    console.log("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –µ—â—ë —Ä–∞–∑");
}

// ### ADVANCED level

// #### Task 1

const UperName = '–ø–û–ª–ò–Ω–ê –Ω–ê–±–ï—Ä–ï–∂–ù–∞–Ø';
let goodName = '';
for (let i = 0; i < UperName.length; i++){
    if (i == 0){
        goodName += UperName[i].toUpperCase();
    }
    else if (i == 7){
        goodName += UperName[i].toUpperCase();
    }
    else{
        goodName += UperName[i].toLowerCase();
    }
}

alert(`–ü—Ä–∏–≤–µ—Ç, ${goodName}!`);

// #### Task 2 üë®‚Äçüè´

const CLIENT_NAME = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:");
const MINUS = prompt("C–∫–æ–ª—å–∫–æ –æ—Ç–Ω—è—Ç—å ?");
const PLUS = prompt("C–∫–æ–ª—å–∫–æ –ø—Ä–∏–±–∞–≤–∏—Ç—å?");
const MULTIPLY = prompt("–ù–∞ —Å–∫–æ–ª—å–∫–æ —É–º–Ω–æ–∂–∏—Ç—å?");
const DIVIDE = prompt("–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å?");
let result = ((((CLIENT_NAME - MINUS) + Number(PLUS)) * MULTIPLY) / DIVIDE);
alert(` ((((${CLIENT_NAME} - ${MINUS}) + ${PLUS}) * ${MULTIPLY}) / ${DIVIDE}) = ${result}`);

// #### Task 3 üë®‚Äçüè´

let str = "";
for (let i = 0; i < 6; i++) {
  str += "#" ;
  for (let j = 0; j < i; j++) {
    str += "#";
  }
  str+= "\n"
}
console.log(str);
